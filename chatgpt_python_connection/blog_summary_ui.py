# app.py
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# ·ª®NG D·ª§NG T√ìM T·∫ÆT BLOG B·∫∞NG STREAMLIT
# Input: URL b√†i vi·∫øt
# Output: T√≥m t·∫Øt g·ªçn b·∫±ng bullet points t·ª´ m√¥ h√¨nh ng√¥n ng·ªØ (LLM)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

import streamlit as st
import re
import textwrap

# Import c√°c module x·ª≠ l√Ω c√≥ s·∫µn t·ª´ project g·ªëc
from helpers import get_article_from_url
from llm import llm_generate_text
from prompts.blog_prompts import blog_bullet_summary_prompt


# ========================
# 1Ô∏è‚É£ C·∫§U H√åNH TRANG
# ========================
# Gi√∫p giao di·ªán hi·ªÉn th·ªã ƒë·∫πp, t·ªëi ∆∞u kh√¥ng gian
st.set_page_config(page_title="T√≥m t·∫Øt Blog b·∫±ng AI", page_icon="üß†", layout="wide")


# ========================
# 2Ô∏è‚É£ C√ÅC H·∫∞NG S·ªê M·∫∂C ƒê·ªäNH
# ========================
DEFAULT_URL = "https://learnwithhasan.com/chatgpt-earthquake/"
DEFAULT_MIN_POINTS = 5
DEFAULT_MAX_POINTS = 10

# Danh s√°ch c√°c model c√≥ th·ªÉ ch·ªçn
MODEL_REGISTRY = {"OpenAI": ["gpt-4o-mini", "gpt-4o", "gpt-3.5-turbo"]}


# ========================
# 3Ô∏è‚É£ H√ÄM TI·ªÜN √çCH
# ========================


def is_valid_url(url: str) -> bool:
    """Ki·ªÉm tra xem URL c√≥ h·ª£p l·ªá kh√¥ng"""
    return bool(re.match(r"^https?://", url.strip()))


@st.cache_data(show_spinner=False)
def fetch_article(url: str) -> str:
    """
    L·∫•y n·ªôi dung b√†i vi·∫øt t·ª´ URL.
    S·ª≠ d·ª•ng cache ƒë·ªÉ tr√°nh t·∫£i l·∫°i nhi·ªÅu l·∫ßn (tƒÉng t·ªëc ƒë·ªô).
    """
    article = get_article_from_url(url)
    return textwrap.dedent(article).strip()


def build_prompt(article: str, min_points: int, max_points: int) -> str:
    """Gh√©p n·ªôi dung b√†i vi·∫øt v√†o template prompt ƒë·ªÉ g·ª≠i cho LLM"""
    return blog_bullet_summary_prompt.format(
        MinPoints=min_points, MaxPoints=max_points, InputText=article
    )


def summarize_with_llm(prompt: str, service: str, model: str) -> str:
    """G·ªçi h√†m LLM sinh t√≥m t·∫Øt"""
    return llm_generate_text(prompt, service, model)


def fix_point_order(min_points: int, max_points: int):
    """ƒê·∫£m b·∫£o min ‚â§ max ƒë·ªÉ tr√°nh l·ªói nh·∫≠p sai"""
    if min_points > max_points:
        return max_points, min_points
    return min_points, max_points


# ========================
# 4Ô∏è‚É£ THANH B√äN (SIDEBAR)
# ========================
# M·ª•c ƒë√≠ch: ch·ª©a c√†i ƒë·∫∑t chung, kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn lu·ªìng ch√≠nh
with st.sidebar:
    st.header("‚öôÔ∏è C√†i ƒë·∫∑t")

    # Ch·ªçn d·ªãch v·ª• LLM
    service = st.selectbox("Ch·ªçn d·ªãch v·ª• AI", list(MODEL_REGISTRY.keys()), index=0)

    # Ch·ªçn model t∆∞∆°ng ·ª©ng
    model = st.selectbox("Ch·ªçn model", MODEL_REGISTRY[service], index=2)

    st.caption("üí° G·ª£i √Ω: Model nh·ªè ch·∫°y nhanh h∆°n, model l·ªõn ch·∫•t l∆∞·ª£ng t·ªët h∆°n.")


# ========================
# 5Ô∏è‚É£ GIAO DI·ªÜN CH√çNH
# ========================
st.title("üß† Tr√¨nh t√≥m t·∫Øt Blog b·∫±ng AI")
st.write(
    "Nh·∫≠p URL c·ªßa b√†i vi·∫øt, ch·ªçn s·ªë l∆∞·ª£ng bullet points, v√† nh·∫≠n b·∫£n t√≥m t·∫Øt nhanh ch√≥ng."
)

# D√πng form ƒë·ªÉ gom c√°c input, tr√°nh vi·ªác app reload m·ªói l·∫ßn nh·∫≠p k√Ω t·ª±
with st.form("summary_form"):
    url = st.text_input(
        "üîó URL b√†i vi·∫øt",
        value=DEFAULT_URL,
        placeholder="https://example.com/blog",
        help="D√°n ƒë∆∞·ªùng link ƒë·∫ßy ƒë·ªß (bao g·ªìm https://)",
    )

    col1, col2 = st.columns(2)
    with col1:
        min_points = st.number_input("S·ªë bullet nh·ªè nh·∫•t", 1, 50, DEFAULT_MIN_POINTS)
    with col2:
        max_points = st.number_input("S·ªë bullet l·ªõn nh·∫•t", 1, 50, DEFAULT_MAX_POINTS)

    submit = st.form_submit_button("üöÄ T√≥m t·∫Øt ngay", use_container_width=True)


# ========================
# 6Ô∏è‚É£ LU·ªíNG CH·∫†Y CH√çNH
# ========================
if submit:
    # Ki·ªÉm tra l·ªói nh·∫≠p URL
    if not is_valid_url(url):
        st.error("‚ùå URL kh√¥ng h·ª£p l·ªá. H√£y nh·∫≠p link b·∫Øt ƒë·∫ßu b·∫±ng http ho·∫∑c https.")
        st.stop()

    # ƒê·∫£m b·∫£o min ‚â§ max
    min_points, max_points = fix_point_order(int(min_points), int(max_points))

    # 1Ô∏è‚É£ L·∫•y n·ªôi dung b√†i vi·∫øt
    with st.spinner("ƒêang t·∫£i b√†i vi·∫øt..."):
        try:
            article = fetch_article(url)
        except Exception as e:
            st.error(f"L·ªói khi l·∫•y b√†i vi·∫øt: {e}")
            st.stop()

    if not article:
        st.warning("Kh√¥ng tr√≠ch xu·∫•t ƒë∆∞·ª£c n·ªôi dung. Th·ª≠ URL kh√°c nh√©.")
        st.stop()

    with st.expander("üëÄ Xem tr∆∞·ªõc n·ªôi dung b√†i vi·∫øt"):
        st.write(article[:1500] + ("..." if len(article) > 1500 else ""))

    # 2Ô∏è‚É£ T·∫°o prompt v√† g·ªçi LLM
    prompt = build_prompt(article, min_points, max_points)

    with st.expander("üß© Xem prompt ƒë√£ t·∫°o (d√†nh cho ng∆∞·ªùi h·ªçc)", expanded=False):
        st.code(prompt, language="markdown")

    with st.spinner(f"ƒêang t√≥m t·∫Øt b·∫±ng {service} ({model})..."):
        try:
            summary = summarize_with_llm(prompt, service, model)
        except Exception as e:
            st.error(f"L·ªói khi g·ªçi AI: {e}")
            st.stop()

    # 3Ô∏è‚É£ Hi·ªÉn th·ªã k·∫øt qu·∫£
    st.success("‚úÖ ƒê√£ t·∫°o t√≥m t·∫Øt th√†nh c√¥ng!")
    st.subheader("üìÑ B·∫£n t√≥m t·∫Øt:")
    st.write(summary)

    # 4Ô∏è‚É£ Cho ph√©p t·∫£i ho·∫∑c ch·ªânh s·ª≠a k·∫øt qu·∫£
    st.download_button(
        "‚¨áÔ∏è T·∫£i t√≥m t·∫Øt (.txt)", summary, file_name="summary.txt", mime="text/plain"
    )

    with st.expander("‚úèÔ∏è Ch·ªânh s·ª≠a tr∆∞·ªõc khi t·∫£i"):
        edited = st.text_area("Ch·ªânh s·ª≠a t·∫°i ƒë√¢y:", value=summary, height=200)
        st.download_button(
            "‚¨áÔ∏è T·∫£i b·∫£n ƒë√£ ch·ªânh s·ª≠a",
            edited,
            file_name="summary_edited.txt",
            mime="text/plain",
        )


# ========================
# 7Ô∏è‚É£ FOOTER / H∆Ø·ªöNG D·∫™N
# ========================
st.markdown("---")
st.markdown("""
### üß≠ C√°ch ho·∫°t ƒë·ªông:
1. ·ª®ng d·ª•ng **t·∫£i n·ªôi dung b√†i vi·∫øt** t·ª´ URL b·∫°n nh·∫≠p.
2. Sau ƒë√≥ **t·∫°o prompt** y√™u c·∫ßu AI t√≥m t·∫Øt theo s·ªë bullet b·∫°n ch·ªçn.
3. Cu·ªëi c√πng, AI **tr·∫£ v·ªÅ b·∫£n t√≥m t·∫Øt** ng·∫Øn g·ªçn, d·ªÖ ƒë·ªçc.

üí° **L∆∞u √Ω:** N·∫øu b√†i vi·∫øt d√†i ho·∫∑c URL l·ªói, c√≥ th·ªÉ c·∫ßn th·ª≠ l·∫°i 1‚Äì2 l·∫ßn.
""")

with st.sidebar:
    st.markdown("---")
    st.markdown("#### üìò Gi·ªõi thi·ªáu")
    st.write(
        "C√¥ng c·ª• n√†y gi√∫p b·∫°n t√≥m t·∫Øt nhanh blog ho·∫∑c b√†i b√°o ƒë·ªÉ ti·∫øt ki·ªám th·ªùi gian ƒë·ªçc."
    )
